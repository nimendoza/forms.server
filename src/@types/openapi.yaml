openapi: 3.0.3

info:
  title: forms.server.ncisomendoza.com
  version: 1.0.0

servers:
  - url: https://forms.server.ncisomendoza.com
    description: Production server

tags:
  - name: users
    description: Users operations
  - name: auth
    description: Authentication operations
  - name: fields
    description: Fields operations
  - name: forms
    description: Forms operations
  - name: groups
    description: Groups operations
  - name: privileges
    description: Privileges operations
  - name: responses
    description: Responses operations
  - name: scopes
    description: Scopes operations

paths:
  /v1/users:
    get:
      tags:
        - users
      summary: Get all users
      description: Get all users
      operationId: get_all_users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - users
      summary: Create a user
      description: Create a user
      operationId: create_user
      requestBody:
        description: User object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  
  /v1/users/{email}:
    delete:
      tags:
        - users
      summary: Delete a user
      description: Delete a user
      operationId: delete_user
      parameters:
        - name: email
          in: path
          description: User email
          required: true
          schema:
            type: string
            format: email
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    get:
      tags:
        - users
      summary: Get a user
      description: Get a user
      operationId: get_user
      parameters:
        - name: email
          in: path
          description: User email
          required: true
          schema:
            type: string
            format: email
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      tags:
        - users
      summary: Update a user
      description: Update a user
      operationId: update_user
      parameters:
        - name: email
          in: path
          description: User email
          required: true
          schema:
            type: string
            format: email
      requestBody:
        description: User object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  
  /v1/users/login:
    post:
      tags:
        - auth
      summary: Login
      description: Login
      operationId: login
      requestBody:
        description: User object that needs to be logged in
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  
  /v1/fields:
    get:
      tags:
        - fields
      summary: Get all fields
      description: Get all fields
      operationId: get_all_fields
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Field'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - fields
      summary: Create a field
      description: Create a field
      operationId: create_field
      requestBody:
        description: Field object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Field'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Field'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /v1/fields/{slug}:
    delete:
      tags:
        - fields
      summary: Delete a field
      description: Delete a field
      operationId: delete_field
      parameters:
        - name: slug
          in: path
          description: Field slug
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    get:
      tags:
        - fields
      summary: Get a field
      description: Get a field
      operationId: get_field
      parameters:
        - name: slug
          in: path
          description: Field slug
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Field'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      tags:
        - fields
      summary: Update a field
      description: Update a field
      operationId: update_field
      parameters:
        - name: slug
          in: path
          description: Field slug
          required: true
          schema:
            type: string
      requestBody:
        description: Field object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Field'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Field'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /v1/forms:
    get:
      tags:
        - forms
      summary: Get all forms
      description: Get all forms
      operationId: get_all_forms
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Form'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - forms
      summary: Create a form
      description: Create a form
      operationId: create_form
      requestBody:
        description: Form object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Form'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /v1/forms/{slug}:
    delete:
      tags:
        - forms
      summary: Delete a form
      description: Delete a form
      operationId: delete_form
      parameters:
        - name: slug
          in: path
          description: Form slug
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    get:
      tags:
        - forms
      summary: Get a form
      description: Get a form
      operationId: get_form
      parameters:
        - name: slug
          in: path
          description: Form slug
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      tags:
        - forms
      summary: Update a form
      description: Update a form
      operationId: update_form
      parameters:
        - name: slug
          in: path
          description: Form slug
          required: true
          schema:
            type: string
      requestBody:
        description: Form object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Form'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /v1/groups:
    get:
      tags:
        - groups
      summary: Get all groups
      description: Get all groups
      operationId: get_all_groups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - groups
      summary: Create a group
      description: Create a group
      operationId: create_group
      requestBody:
        description: Group object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /v1/groups/{slug}:
    delete:
      tags:
        - groups
      summary: Delete a group
      description: Delete a group
      operationId: delete_group
      parameters:
        - name: slug
          in: path
          description: Group slug
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    get:
      tags:
        - groups
      summary: Get a group
      description: Get a group
      operationId: get_group
      parameters:
        - name: slug
          in: path
          description: Group slug
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      tags:
        - groups
      summary: Update a group
      description: Update a group
      operationId: update_group
      parameters:
        - name: slug
          in: path
          description: Group slug
          required: true
          schema:
            type: string
      requestBody:
        description: Group object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /v1/privileges:
    get:
      tags:
        - privileges
      summary: Get all privileges
      description: Get all privileges
      operationId: get_all_privileges
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Privilege'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - privileges
      summary: Create a privilege
      description: Create a privilege
      operationId: create_privilege
      requestBody:
        description: Privilege object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Privilege'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Privilege'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /v1/privileges/{slug}:
    delete:
      tags:
        - privileges
      summary: Delete a privilege
      description: Delete a privilege
      operationId: delete_privilege
      parameters:
        - name: slug
          in: path
          description: Privilege slug
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    get:
      tags:
        - privileges
      summary: Get a privilege
      description: Get a privilege
      operationId: get_privilege
      parameters:
        - name: slug
          in: path
          description: Privilege slug
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Privilege'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      tags:
        - privileges
      summary: Update a privilege
      description: Update a privilege
      operationId: update_privilege
      parameters:
        - name: slug
          in: path
          description: Privilege slug
          required: true
          schema:
            type: string
      requestBody:
        description: Privilege object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Privilege'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Privilege'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /v1/responses:
    get:
      tags:
        - responses
      summary: Get all responses
      description: Get all responses
      operationId: get_all_responses
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Success'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /v1/responses/{slug}:
    delete:
      tags:
        - responses
      summary: Delete a response
      description: Delete a response
      operationId: delete_response
      parameters:
        - name: slug
          in: path
          description: Response slug
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    get:
      tags:
        - responses
      summary: Get a response
      description: Get a response
      operationId: get_response
      parameters:
        - name: slug
          in: path
          description: Response slug
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      tags:
        - responses
      summary: Update a response
      description: Update a response
      operationId: update_response
      parameters:
        - name: slug
          in: path
          description: Response slug
          required: true
          schema:
            type: string
      requestBody:
        description: Response object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Success'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /v1/scopes:
    get:
      tags:
        - scopes
      summary: Get all scopes
      description: Get all scopes
      operationId: get_all_scopes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scope'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /v1/scopes/{slug}:
    delete:
      tags:
        - scopes
      summary: Delete a scope
      description: Delete a scope
      operationId: delete_scope
      parameters:
        - name: slug
          in: path
          description: Scope slug
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    get:
      tags:
        - scopes
      summary: Get a scope
      description: Get a scope
      operationId: get_scope
      parameters:
        - name: slug
          in: path
          description: Scope slug
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scope'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      tags:
        - scopes
      summary: Update a scope
      description: Update a scope
      operationId: update_scope
      parameters:
        - name: slug
          in: path
          description: Scope slug
          required: true
          schema:
            type: string
      requestBody:
        description: Scope object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scope'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scope'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

components:
  schemas:
    User:
      type: object
      required:
        - email
        - name
        - groups
        - privileges
        - responses
        - password
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        email:
          type: string
          format: email
        name:
          type: string
        groups:
          type: array
          items:
            type: string
        privileges:
          type: array
          items:
            type: string
        responses:
          type: array
          items:
            type: string
        password:
          type: string
          format: password
    Login:
      type: object
      required:
        - token
      properties:
        token:
          type: string
    Field:
      type: object
      required:
        - id
        - createdAt
        - slug
        - name
        - description
        - forms
        - responses
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        slug:
          type: string
        name:
          type: string
        description:
          type: string
        forms:
          type: array
          items:
            type: string
        responses:
          type: array
          items:
            type: string
    Form:
      type: object
      required:
        - id
        - createdAt
        - slug
        - name
        - description
        - fields
      properties:
        id:
          type: string
          format: uuid
        slug:
          type: string
        name:
          type: string
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        fields:
          type: array
          items:
            type: string
    Group:
      type: object
      required:
        - id
        - createdAt
        - slug
        - name
        - description
        - users
        - privileges
      properties:
        id:
          type: string
          format: uuid
        slug:
          type: string
        name:
          type: string
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        users:
          type: array
          items:
            type: string
        privileges:
          type: array
          items:
            type: string
    Privilege:
      type: object
      required:
        - id
        - createdAt
        - slug
        - name
        - description
        - type
        - scope
        - users
        - groups
      properties:
        id:
          type: string
          format: uuid
        slug:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
          oneOf:
            - title: none
              description: No privilege
              const: NONE
            - title: read
              description: Read privilege
              const: READ
            - title: write
              description: Write privilege
              const: WRITE
            - title: DELETE
              description: Delete privilege
              const: DELETE
        createdAt:
          type: string
          format: date-time
        scope:
          type: string
        users:
          type: array
          items:
            type: string
        groups:
          type: array
          items:
            type: string
    Response:
      type: object
      required:
        - id
        - createdAt
        - slug
        - name
        - description
        - data
        - field
        - user
      properties:
        id:
          type: string
          format: uuid
        slug:
          type: string
        name:
          type: string
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        data:
          type: object
        field:
          type: string
        user:
          type: string
    Success:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    Scope:
      type: object
      required:
        - id
        - name
        - description
        - privileges
        - createdAt
        - slug
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        privileges:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        slug:
          type: string
    Unauthorized:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    BadRequest:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    Conflict:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    NotFound:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    InternalServerError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
